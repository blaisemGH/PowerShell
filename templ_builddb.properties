# Properties needed only for buildDB

# Specify layers for the DB here in case they shall be different from the "layers" entry in db.properties.
#buildDB.layers=

# Specify parallelDegree for the DB here in case it shall be different from the "parallelDegree" entry in jcal.properties.
#buildDB.parallelDegree=

# If given, let buildDB use the given cursor_sharing session setting. Allowed values: FORCE, SIMILAR, EXACT
# buildDB.cursor_sharing=FORCE

# Property names (space separated) whose change triggers the buildDB not to make use of incremental logic
# The default value contains some properties used for schema names, tablespace names and partitioning flags
# buildDB.incremental.propertiesTriggeringNonIncremental=

# The oracle system user and password
# Leave these empty (no blanks!) if the system user is not to be used.
# In this case, 'dontDropSchemasInUpgrade' should be set to 1 (see below).
# i.e.:
systemUID=system
systemPWD=manager
# crypted.systemPWD can be used instead of systemPWD for a Blowfish encrypted version of the systemPWD.
#crypted.systemPWD=

#the default tablespace for indexes for all users created by the buildDB process
#Note: If this parameter is modified, it might also be necessary to adapt parameter "indexOptions" in jcal.properties!
indxTBS=indx
#indxTBStempadd=indx1

#the default tablespace for tables for all users created by the buildDB process
userTBS=users
#userTBStempadd=users1

#the default temporary tablespace for all users created by the buildDB process
tempTBS=temp
#tempTBStempadd=temp1

#the default tablespace for tables the temp schema users, indexOptions in jcal.properties needs to be adapted accordingly
#default when left blank or undefined: userTBS
#stagingTBS=

#the default tablespace for tables in the vdal and edit schema users,
#default when left blank or undefined: userTBS
#staticTBS=

# the oracle version (first number)
oracleVersion=19

# partitioned tables (=1) or not (=0) for Enterprise Edition
partitioned=1

# Defines if indexes in Master and Edit schema will be set to nologging (0, default) or to logging (1).
# Setting this parameter to 1 will prevent data block corruptions in Master and Edit schema
# after a DB restore, but may slow down performance when partitioning.
indexLogging=0

# When dontDropSchemasInUpgrade=0, a builddb upgrade will drop and re-create the temp and VDAL schemas.
# When dontDropSchemasInUpgrade=1, these schemas will be emptied from all objects instead.
# default: 1
dontDropSchemasInUpgrade=1

# A comma-separated list of objects can be specified that should never be
# dropped by buildDB.sh/cmd.
# The elements in the list must be enclosed in apostrophes.
# e.g.: 'Object1','Object2'
# default: 'null'
dontDropObjects='null'

# Some Oracle versions have performance problems with VDAL's default access on pids tables
# in VDAL views ("use_sj(...)"). Uncomment the following entry for a workaround. 
pidsTableHint=no_unnest

# Due to an Oracle Bug in Oracle Version 10.2.0.3 some VDAL Views do not work, this may result in programm termination with the ORA-07445.
# With this new parameter the VDAL queries will be redefined to avoid the Oracle problem.
# vdalHint=ALL_ROWS
# optional:
# In case performance problems occur with the m# and mv# views im VDAL scheme, while processing the additional parameters are to be set:
# m_vdalHint=ALL_ROWS
# and: 
# mv_vdalHint=ALL_ROWS
# In case of using workspaceNewPidsTableLogic=1 to join the tables with the pidstable in VDAL schema 
# m_vdalHint=USE_HASH(t p)

# defines PCTFREE property for (most of) the tables that are created in the temp schema
# Due to a huge amount of updates during processing this property might increase performance
# for those cases when empty fields are filled. 
# default: 10 (by Oracle database)
# tempPctFree=20

# Uncomment the following entry if the transfer of EDIT partitions to another used is very slow.
# This problem occurs if four_eyes=enabled in db.properties and the MPE process mpeMergePartitions has already run
# to merge all physiscal partitions of one period and cluster to only one physical partition.
# If there is only one physical partitions then it takes too long to check if the tables contain rows for the plot_fk
# of the EDIT partition that is transfered (see VDAL workspace function table_has_rows).
# After the change, "buildDB.sh/cmd upgrade" has to run. "buildDB.sh/cmd special --script changeIndexes.sql" can be run later as this may take some time.
# This will create a new bitmap index <table_name>_pfix on column plot_fk for each partitioned table
# if no other index with column plot_fk as the first column exists.
# The indexes <table_name>_pfix are created as invisible indexes, being used only in VDAL-workspace or partitioning operations.
# Remark:
# The new bitmap indexes <table_name>_pfix are always created in the default tablespace for indexes (indxTBS).
# If a customized TablespaceManager is used then the existing index partitions for the bitmap indexes <table_name>_pfix
# have to be rebuilded online in the correct index tablespace using the script customize_changeIndexes.sql.
# default: 0
# additional_PLOT_FK_indexes=1

# Uncomment the following entry to avoid the field PLOT_FK in partitioned indexes.
# Due to an Oracle bug this might be necessary with some workspace changes, that were made
# to enable parallel access to data in the master schema. The Oracle bug makes tables like
# RECS_TYPE_18 and RECS_TYPE_22 appear empty although they are filled.
# default: 0
# noPlotFKInIndex=1

# Uncomment the following entry if a customized TablespaceManager is used with pyhsical partitioning.
# With this entry, whenever a partitioned index is (re-)created in the master schema, the tablespaces for
# existing partitions will be specified. They are collected from other existing partitioned indexes.
# default: 0
# respectTablespaceManager=1

# script.usePreparedStatements determines if buildDB execution can handle simple insert statements with PreparedStatements.
# Defaults to true.
# script.usePreparedStatements=false

# Set tables in temp schemas to LOGGING (default false).
# tempTableLogging=true
# Set indexes in temp schemas initially to LOGGING (default false).
# tempIndexLogging=true

# Parallel degree to use for statements querying existence of partition entries in tables (default: builddb.parallelDegree resp. parallelDegree) 
#parallelDegreeWorkspaceTableHasRows=1

# Determines the algorithm that the workspace uses for deleting partitions.
# Please don't change this without support.
# 0: Loop for each changed record in the partition; execute update statements per single record in the loop
# 1: Three update statements with where conditions, no loop
# default: 1
# workspaceDeletionLogic=0

# specifies whether to check at any db process (create, upgrade) if required versions are installed
# 	if true and required versions are not all installed, the db process is aborted
# 	if false and required versions are not all installed, the missing versions are only logged 
versioncheck.build=true

# Determines the logic on how partitioned tables are restricted to the visible partitions in the VDAL workspace.
# Please don't change this without support.
# 0: Use in select for the VDAL pidstable and between with sys_context variables
# 1: Use in select for the VDAL pidstable
# 2: Use join for the VDAL pidstable (Only used for product ABACUS/GMP)
# default: 0
workspaceNewPidsTableLogic=0

# Determines if the 4 eyes principle is used in the VDAL views.
# Please don't change this without support.
# 0: Don't use the 4 eyes principle in the VDAL views.
# 1: Use the 4 eyes principle in the VDAL views.
# default: 1
workspace4EyesLogic=1

# Determines if the change status in the partitioned table could have null values
# Please don't change this without support.
# 0: change status is never filled with null.
# 1: change status is filled with null.
# default: 1
workspaceChangeStatusNULL=1

# Used to grant rights to the ABACUS schemas to enable concurrent statistics gathering.
# 0 = do not grant the rights (DEFAULT)
# 1 = grant rights for concurrent statistics gathering  
enableConcurrentDbStats=0

#Specifies how many temp schemas can be built concurrently.
#The default value when this property is not defined comes from the "parallelDegree"
#parallelDegreeBuildDBTempSchemas=

# Specifies parallel degree for creation of PLOT_FK indexes (additional optional PFIX indexes for all tables and PLIX indexes for tables of new data model in 7.x).
# The default value when this property is not set is "parallelDegree"
#buildDB.special.changeIndexes.parallelDegree=

# Specifies Oracle hint in select on dictionary objects for creation of PLOT_FK indexes.
# The specific Oracle hint should be activated in case of performance issue during creation of these indexes.
# The parameter is not depending on the optional parameter buildDB.special.changeIndexes.parallelDegree.
# The default value is null
#buildDB.special.plot_fk_selectTablesHint=DYNAMIC_SAMPLING(8) NO_AUTO_REOPTIMIZE

# Specifies Oracle hint "materialize" for the sub queries on partitions in MASTER schema and errorlevel in EDIT schema for errorlevel_view.
# Deactivation of this hint by setting the value "no_hint_necessary" might give a better Oracle execution plan when selecting records with errorlevel_view (e.g. by DAAL) for many periods/clusters (many different BASE partitions).
# If value "no_hint_necessary" is defined for this parameter the hint will be /*+ */ in errorlevel_view. Otherwise it will be /*+ materialize */.
# The default value is materialize
#errorlevel_viewHint=no_hint_necessary

# set to the number of times a failed statement will be executed again
# default: 0
# buildDB.statementretry=3

# set to time (in ms) the system will wait in order to retry a statement
# default: 1000
# buildDB.statementretrytime=3000

# Use new combined normal indexes instead of bitmap indexes for Daal v2.
# The useage of combined normal indexes is recommended for Daal v2 and can be used only when Daal v2 is activated.
# The recreation of the IX indexes for Daal v2 relevant entities of the new A360 data model will require significant time
# (depending on the used data volume in MASTER schema) and has impact on the used storage in tablespaces of the database too.
# The old IX, FN_IX, PLIX, CHIX and PFIX bitmap indexes will be dropped for the relevant tables automatically
# before the new combined normal IX indexes will be created.
# It is recommended to test this index recreation in detail and estimate the runtime of buildDB special --script=changeIndexes.sql
# by comparing the data volume and the count of index partitions in case of using physical partitioning (e.g. with OnePerEditStrategy)
# which can be checked with the standrd MPE process "Export Data for Performance Analysis".
# Remarks:
# The relevant entities (tables) have a column GROUP_FK and a table name which does not start with "RECS_TYPE_" and does not start with "AWV_".
# The new reporting component's tables (table names which start e.g. with "REPORT_DATA_") still use the old bitmap indexes for now.
# default: false
useCombinedNormalIndexesForDaalV2=true

# When activated, sets Oracle user profile for all Abacus users. Can be also used for archive users when created via tools/SQLTools
# Oracle profile must be created before activating the parameter. Please check with your Oracle DBA.
# default: DEFAULT
# buildDB.userProfile=